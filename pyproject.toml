[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "factory-simulator"
version = "1.0.0"
description = "Ultra-realistic self-replicating solar factory simulation with modular architecture"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Bryan C"}
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["simulation", "factory", "manufacturing", "self-replication", "modular"]

dependencies = [
    "pyyaml>=6.0,<7.0",
]

[project.optional-dependencies]
viz = [
    "matplotlib>=3.5.0,<4.0.0",
]
validation = [
    "pydantic>=2.0.0,<3.0.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "mypy>=0.950",
]
all = [
    "factory-simulator[viz,validation,dev]",
]

[project.scripts]
factory-sim = "self_replicating_factory_sim:main"
factory-builder = "factory_builder:main"

[project.urls]
Homepage = "https://github.com/yourusername/factory-simulator"
Issues = "https://github.com/yourusername/factory-simulator/issues"
Documentation = "https://github.com/yourusername/factory-simulator#readme"

[tool.setuptools]
packages = ["factory_simulator"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "-v",
    "-ra",
    "--showlocals",
    "--strict-markers",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--disable-warnings",
]
markers = [
    "unit: Unit tests for individual components",
    "integration: Integration tests for end-to-end workflows",
    "slow: Tests that take significant time to run",
    "requires_matplotlib: Tests that require matplotlib",
    "requires_yaml: Tests that require PyYAML",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
    "*/site-packages/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
strict_optional = true
check_untyped_defs = true
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = "pytest.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "yaml.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "matplotlib.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pydantic.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "exceptions"
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Unused imports
"tests/**/*.py" = ["F401", "F811"]  # Unused imports, redefinition